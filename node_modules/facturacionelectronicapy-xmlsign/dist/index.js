"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const XMLDsigJava_1 = __importDefault(require("./XMLDsigJava"));
const XMLDsigNode_1 = __importDefault(require("./XMLDsigNode"));
class DESign {
    constructor() {
        this.signXML = (xml, file, password, signByNodeJS) => {
            if (signByNodeJS == true) {
                return XMLDsigNode_1.default.signDocument(xml, "DE", file, password);
            }
            else {
                return XMLDsigJava_1.default.signDocument(xml, "DE", file, password);
            }
            //return dsigJava.signDocument(xml, "DE", file, password);
        };
        this.signXMLFiles = (xmls, file, password, signByNodeJS) => {
            if (signByNodeJS == true) {
                return XMLDsigNode_1.default.signDocuments(xmls, "DE", file, password);
            }
            else {
                return XMLDsigJava_1.default.signDocuments(xmls, "DE", file, password);
            }
        };
        /*signXMLFilesNode = (
          xmls: Array<any>,
          file: any,
          password: any
        ): Promise<any> => {
          //return dsigJava.signDocuments(xmls, "DE", file, password);
          return dsigNode.signDocument(xmls, "DE", file, password);
        };*/
        this.signXMLEvento = (xml, file, password, signByNodeJS) => {
            if (signByNodeJS == true) {
                return XMLDsigNode_1.default.signEvento(xml, "rEve", file, password);
            }
            else {
                return XMLDsigJava_1.default.signEvento(xml, "rEve", file, password);
            }
            //return dsigNode.signDocument([xml], "DE", file, password);
        };
        this.signXMLRecibo = (xml, file, password, signByNodeJS) => {
            if (signByNodeJS == true) {
                return XMLDsigNode_1.default.signDocument(xml, "recibo", file, password);
            }
            else {
                return XMLDsigJava_1.default.signDocument(xml, "recibo", file, password);
            }
            //return dsigNode.signDocument([xml], "DE", file, password);
        };
        this.getExpiration = (file, password, useNodeJS) => {
            if (useNodeJS == true) {
                return XMLDsigNode_1.default.getExpiration(file, password);
            }
            else {
                return XMLDsigJava_1.default.getExpiration(file, password);
            }
        };
    }
}
exports.default = new DESign();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxnRUFBcUM7QUFDckMsZ0VBQXFDO0FBRXJDLE1BQU0sTUFBTTtJQUFaO1FBQ0UsWUFBTyxHQUFHLENBQ1IsR0FBVyxFQUNYLElBQVMsRUFDVCxRQUFhLEVBQ2IsWUFBc0IsRUFDUixFQUFFO1lBQ2hCLElBQUksWUFBWSxJQUFJLElBQUksRUFBRTtnQkFDeEIsT0FBTyxxQkFBUSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQzthQUN6RDtpQkFBTTtnQkFDTCxPQUFPLHFCQUFRLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO2FBQ3pEO1lBQ0QsMERBQTBEO1FBQzVELENBQUMsQ0FBQztRQUVGLGlCQUFZLEdBQUcsQ0FDYixJQUFnQixFQUNoQixJQUFTLEVBQ1QsUUFBYSxFQUNiLFlBQXNCLEVBQ1IsRUFBRTtZQUNoQixJQUFJLFlBQVksSUFBSSxJQUFJLEVBQUU7Z0JBQ3hCLE9BQU8scUJBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7YUFDM0Q7aUJBQU07Z0JBQ0wsT0FBTyxxQkFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQzthQUMzRDtRQUNILENBQUMsQ0FBQztRQUVGOzs7Ozs7O1lBT0k7UUFFSixrQkFBYSxHQUFHLENBQ2QsR0FBVyxFQUNYLElBQVMsRUFDVCxRQUFhLEVBQ2IsWUFBc0IsRUFDUixFQUFFO1lBQ2hCLElBQUksWUFBWSxJQUFJLElBQUksRUFBRTtnQkFDeEIsT0FBTyxxQkFBUSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQzthQUN6RDtpQkFBTTtnQkFDTCxPQUFPLHFCQUFRLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO2FBQ3pEO1lBRUQsNERBQTREO1FBQzlELENBQUMsQ0FBQztRQUVGLGtCQUFhLEdBQUcsQ0FDZCxHQUFXLEVBQ1gsSUFBUyxFQUNULFFBQWEsRUFDYixZQUFzQixFQUNSLEVBQUU7WUFDaEIsSUFBSSxZQUFZLElBQUksSUFBSSxFQUFFO2dCQUN4QixPQUFPLHFCQUFRLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO2FBQzdEO2lCQUFNO2dCQUNMLE9BQU8scUJBQVEsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7YUFDN0Q7WUFDRCw0REFBNEQ7UUFDOUQsQ0FBQyxDQUFDO1FBRUYsa0JBQWEsR0FBRyxDQUNkLElBQVMsRUFDVCxRQUFhLEVBQ2IsU0FBbUIsRUFDTCxFQUFFO1lBQ2hCLElBQUksU0FBUyxJQUFJLElBQUksRUFBRTtnQkFDckIsT0FBTyxxQkFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7YUFDL0M7aUJBQU07Z0JBQ0wsT0FBTyxxQkFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7YUFDL0M7UUFDSCxDQUFDLENBQUM7SUFDSixDQUFDO0NBQUE7QUFFRCxrQkFBZSxJQUFJLE1BQU0sRUFBRSxDQUFDIn0=