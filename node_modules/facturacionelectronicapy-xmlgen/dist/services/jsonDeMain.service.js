"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const xml2js = __importStar(require("xml2js"));
const StringUtil_service_1 = __importDefault(require("./StringUtil.service"));
const FechaUtil_service_1 = __importDefault(require("./FechaUtil.service"));
const constants_service_1 = __importDefault(require("./constants.service"));
const jsonDteItem_service_1 = __importDefault(require("./jsonDteItem.service"));
const jsonDteAlgoritmos_service_1 = __importDefault(require("./jsonDteAlgoritmos.service"));
const jsonDteComplementario_service_1 = __importDefault(require("./jsonDteComplementario.service"));
const jsonDteTransporte_service_1 = __importDefault(require("./jsonDteTransporte.service"));
const jsonDteTotales_service_1 = __importDefault(require("./jsonDteTotales.service"));
const jsonDteComplementariosComerciales_service_1 = __importDefault(require("./jsonDteComplementariosComerciales.service"));
const jsonDteIdentificacionDocumento_service_1 = __importDefault(require("./jsonDteIdentificacionDocumento.service"));
const jsonDeMainValidate_service_1 = __importDefault(require("./jsonDeMainValidate.service"));
class JSonDeMainService {
    constructor() {
        this.codigoSeguridad = null;
        this.codigoControl = null;
        this.json = {};
        this.validateError = true;
    }
    generateXMLDE(params, data, config) {
        return new Promise((resolve, reject) => {
            try {
                let defaultConfig = {
                    defaultValues: true,
                    //arrayValuesSeparator : ', ',
                    errorSeparator: '; ',
                    errorLimit: 10,
                    redondeoSedeco: true,
                    decimals: 2,
                    taxDecimals: 2,
                    pygDecimals: 0,
                    partialTaxDecimals: 8,
                    pygTaxDecimals: 0,
                    userObjectRemove: false,
                    test: false,
                };
                defaultConfig = Object.assign(defaultConfig, config);
                resolve(this.generateXMLDeService(params, data, defaultConfig));
            }
            catch (error) {
                reject(error);
            }
        });
    }
    /**
     * Metodo principal de generacion de XML del DE
     * @param params
     * @param data
     * @returns
     */
    generateXMLDeService(params, data, config) {
        this.removeUnderscoreAndPutCamelCase(data);
        this.addDefaultValues(data);
        if (this.validateError) {
            jsonDeMainValidate_service_1.default.validateValues(Object.assign({}, params), Object.assign({}, data), config);
        }
        this.json = {};
        this.generateCodigoControl(params, data); //Luego genera el código de Control
        this.generateRte(params);
        this.json['rDE']['DE'] = this.generateDe(params, data);
        //---
        this.generateDatosOperacion(params, data);
        this.generateDatosTimbrado(params, data);
        this.generateDatosGenerales(params, data, config);
        //---
        this.generateDatosEspecificosPorTipoDE(params, data, config);
        if (data['tipoDocumento'] == 1 || data['tipoDocumento'] == 4) {
            this.generateDatosCondicionOperacionDE(params, data, config);
        }
        //['gDtipDE']=E001
        this.json['rDE']['DE']['gDtipDE']['gCamItem'] = jsonDteItem_service_1.default.generateDatosItemsOperacion(params, data, config);
        let gCamEsp = jsonDteComplementario_service_1.default.generateDatosComplementariosComercialesDeUsoEspecificos(params, data);
        if (gCamEsp) {
            this.json['rDE']['DE']['gDtipDE']['gCamEsp'] = gCamEsp;
        }
        if (data['tipoDocumento'] == 1 || data['tipoDocumento'] == 7) {
            //1 Opcional, 7 Obligatorio
            if (data['detalleTransporte']) {
                this.json['rDE']['DE']['gDtipDE']['gTransp'] = jsonDteTransporte_service_1.default.generateDatosTransporte(params, data);
            }
        }
        if (data['tipoDocumento'] != 7) {
            const items = this.json['rDE']['DE']['gDtipDE']['gCamItem'];
            this.json['rDE']['DE']['gTotSub'] = jsonDteTotales_service_1.default.generateDatosTotales(params, data, items, config);
        }
        if (data['complementarios']) {
            this.json['rDE']['DE']['gCamGen'] = jsonDteComplementariosComerciales_service_1.default.generateDatosComercialesUsoGeneral(params, data);
        }
        if (data['tipoDocumento'] == 4 || data['tipoDocumento'] == 5 || data['tipoDocumento'] == 6) {
            if (!data['documentoAsociado']) {
                /*throw new Error(
                  'Documento asociado es obligatorio para el tipo de documento electrónico (' +
                    data['tipoDocumento'] +
                    ') seleccionado',
                );*/
            }
        }
        if (data['tipoDocumento'] == 1 ||
            data['tipoDocumento'] == 4 ||
            data['tipoDocumento'] == 5 ||
            data['tipoDocumento'] == 6 ||
            data['tipoDocumento'] == 7) {
            //this.json['rDE']['DE']['gDtipDE']['gCamDEAsoc'] = jsonDteIdentificacionDocumento.generateDatosDocumentoAsociado(params, data);
            if (data['documentoAsociado']) {
                if (!Array.isArray(data['documentoAsociado'])) {
                    this.json['rDE']['DE']['gCamDEAsoc'] = jsonDteIdentificacionDocumento_service_1.default.generateDatosDocumentoAsociado(params, data['documentoAsociado']);
                }
                else {
                    //Caso sea un array.
                    this.json['rDE']['DE']['gCamDEAsoc'] = new Array();
                    for (var i = 0; i < data['documentoAsociado'].length; i++) {
                        const dataDocumentoAsociado = data['documentoAsociado'][i];
                        this.json['rDE']['DE']['gCamDEAsoc'].push(jsonDteIdentificacionDocumento_service_1.default.generateDatosDocumentoAsociado(params, dataDocumentoAsociado));
                    }
                }
            }
        }
        var builder = new xml2js.Builder({
            xmldec: {
                version: '1.0',
                encoding: 'UTF-8',
                standalone: false,
            },
        });
        var xml = builder.buildObject(this.json);
        return this.normalizeXML(xml); //Para firmar tiene que estar normalizado
    }
    /**
     * Genera el CDC para la Factura
     * Corresponde al Id del DE
     *
     * @param params
     * @param data
     */
    generateCodigoControl(params, data) {
        if (data.cdc && (data.cdc + '').length == 44) {
            //Caso ya se le pase el CDC
            this.codigoSeguridad = data.cdc.substring(34, 43);
            this.codigoControl = data.cdc;
            //Como se va utilizar el CDC enviado como parametro, va a verificar que todos los datos del XML coincidan con el CDC.
            const tipoDocumentoCDC = this.codigoControl.substring(0, 2);
            const establecimientoCDC = this.codigoControl.substring(11, 14);
            const puntoCDC = this.codigoControl.substring(14, 17);
            const numeroCDC = this.codigoControl.substring(17, 24);
            const fechaCDC = this.codigoControl.substring(25, 33);
            const tipoEmisionCDC = this.codigoControl.substring(33, 34);
            const establecimiento = StringUtil_service_1.default.leftZero(data['establecimiento'], 3);
            const punto = StringUtil_service_1.default.leftZero(data['punto'], 3);
            const numero = StringUtil_service_1.default.leftZero(data['numero'], 7);
            const fecha = (data['fecha'] + '').substring(0, 4) +
                (data['fecha'] + '').substring(5, 7) +
                (data['fecha'] + '').substring(8, 10);
        }
        else {
            this.validateCamposDelCDC(params, data);
            this.codigoSeguridad = StringUtil_service_1.default.leftZero(data.codigoSeguridadAleatorio, 9);
            this.codigoControl = jsonDteAlgoritmos_service_1.default.generateCodigoControl(params, data, this.codigoSeguridad);
        }
    }
    validateCamposDelCDC(params, data) {
        //Validar campos básicos para el código de control
        if (!params.ruc) {
            throw new Error('Debe completar Tipo de Documento en params.ruc');
        }
        if (!data.tipoDocumento) {
            throw new Error('Debe completar Tipo de Documento en data.tipoDocumento');
        }
        if (!data.establecimiento) {
            throw new Error('Debe completar Establecimiento de la Emisión en data.establecimiento');
        }
        if (!data.punto) {
            throw new Error('Debe completar el Punto de emisión en data.punto');
        }
        if (!data.numero) {
            throw new Error('Debe completar el Número de Documento en data.numero');
        }
        if (!data.fecha) {
            throw new Error('Debe completar la Fecha de Emisión en data.fecha');
        }
        if (!(params.ruc.indexOf('-') >= 0)) {
            throw new Error('El RUC del Emisor debe contener el DV en params.ruc');
        }
        let rucEmisor = params['ruc'].split('-')[0];
        let dvEmisor = params['ruc'].split('-')[1];
        if ((rucEmisor + '').length > 8) {
            throw new Error('La parte del RUC del Emisor no puede superar los 8 caracteres');
        }
        if ((dvEmisor + '').length > 1) {
            throw new Error('El DV del RUC del Emisor no puede superar 1 caracter');
        }
        if ((data.tipoDocumento + '').length > 1) {
            throw new Error('El Tipo de Documento no puede superar 1 digito en data.tipoDocumento');
        }
        if ((data.establecimiento + '').length > 3) {
            throw new Error('El Establecimiento no puede superar 3 digitos en data.establecimiento');
        }
        if ((data.punto + '').length > 3) {
            throw new Error('El Punto de Emisión no puede superar 3 digitos en data.punto');
        }
        if ((data.numero + '').length > 7) {
            throw new Error('El Número de Documento no puede superar 7 digitos en data.numero');
        }
        if ((data.fecha + '').length > 19) {
            throw new Error('La Fecha de Emisión no puede superar los 19 caracteres en data.fecha');
        }
    }
    /**
     * Si los valores vienen en underscore, crea los valores en formato variableJava que
     * sera utilizado dentro del proceso,
     *
     * Ej. si viene tipo_documento crea una variable tipoDocumento, con el mismo valor.
     *
     * @param data
     */
    removeUnderscoreAndPutCamelCase(data) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85;
        const regExpOnlyNumber = new RegExp(/^\d+$/);
        if (data.tipo_documento) {
            data.tipoDocumento = data.tipo_documento;
        }
        if (data.tipo_contribuyente) {
            data.tipoContribuyente = data.tipo_contribuyente;
        }
        if (data.tipo_emision) {
            data.tipoEmision = data.tipo_emision;
        }
        if (data.tipo_transaccion) {
            data.tipoTransaccion = data.tipo_transaccion;
        }
        if (data.tipo_impuesto) {
            data.tipoImpuesto = data.tipo_impuesto;
        }
        if (data.condicion_anticipo) {
            data.condicionAnticipo = data.condicion_anticipo;
        }
        if (data.condicion_tipo_cambio) {
            data.condicionTipoCambio = data.condicion_tipo_cambio;
        }
        if (data.descuento_global) {
            data.descuentoGlobal = data.descuento_global;
        }
        //Objeto Cliente
        if ((_a = data.cliente) === null || _a === void 0 ? void 0 : _a.razon_social) {
            data.cliente.razonSocial = data.cliente.razon_social;
        }
        if ((_b = data.cliente) === null || _b === void 0 ? void 0 : _b.nombre_fantasia) {
            data.cliente.nombreFantasia = data.cliente.nombre_fantasia;
        }
        if ((_c = data.cliente) === null || _c === void 0 ? void 0 : _c.tipo_operacion) {
            data.cliente.tipoOperacion = data.cliente.tipo_operacion;
        }
        //Campo que puede ser un numero = 0, hay que validar de esta forma
        if (typeof data.cliente != 'undefined' && typeof data.cliente.numero_casa != 'undefined') {
            if (data.cliente.numero_casa != null) {
                data.cliente.numeroCasa = data.cliente.numero_casa + '';
            }
        }
        if ((_d = data.cliente) === null || _d === void 0 ? void 0 : _d.tipo_contribuyente) {
            data.cliente.tipoContribuyente = data.cliente.tipo_contribuyente;
        }
        if ((_e = data.cliente) === null || _e === void 0 ? void 0 : _e.documento_tipo) {
            data.cliente.documentoTipo = data.cliente.documento_tipo;
        }
        if ((_f = data.cliente) === null || _f === void 0 ? void 0 : _f.documento_tipo_descripcion) {
            data.cliente.documentoTipoDescripcion = data.cliente.documento_tipo_descripcion;
        }
        if ((_g = data.cliente) === null || _g === void 0 ? void 0 : _g.documento_numero) {
            data.cliente.documentoNumero = data.cliente.documento_numero;
        }
        //Usuario
        if ((_h = data.usuario) === null || _h === void 0 ? void 0 : _h.documento_tipo) {
            data.usuario.documentoTipo = data.usuario.documento_tipo;
        }
        if ((_j = data.usuario) === null || _j === void 0 ? void 0 : _j.documento_tipo_descripcion) {
            data.usuario.documentoTipoDescripcion = data.usuario.documento_tipo_descripcion;
        }
        if ((_k = data.usuario) === null || _k === void 0 ? void 0 : _k.documento_numero) {
            data.usuario.documentoNumero = data.usuario.documento_numero;
        }
        //Factura
        if ((_l = data.factura) === null || _l === void 0 ? void 0 : _l.fecha_envio) {
            data.factura.fechaEnvio = data.usuario.fecha_envio;
        }
        //AutoFactura
        if (data.auto_factura) {
            data.autoFactura = Object.assign({}, data.auto_factura);
        }
        if ((_m = data.autoFactura) === null || _m === void 0 ? void 0 : _m.tipo_vendedor) {
            data.autoFactura.tipoVendedor = data.autoFactura.tipo_vendedor;
        }
        if ((_o = data.autoFactura) === null || _o === void 0 ? void 0 : _o.documento_tipo) {
            data.autoFactura.documentoTipo = data.autoFactura.documento_tipo;
        }
        if ((_p = data.autoFactura) === null || _p === void 0 ? void 0 : _p.documento_numero) {
            data.autoFactura.documentoNumero = data.autoFactura.documento_numero;
        }
        if (data.autoFactura != null &&
            typeof data.autoFactura != 'undefined' &&
            data.autoFactura.numero_casa != null &&
            typeof data.autoFactura.numero_casa != 'undefined') {
            if (data.autoFactura.numero_casa != null) {
                data.autoFactura.numeroCasa = data.autoFactura.numero_casa + '';
            }
        }
        /*if (data.autoFactura?.numero_casa) {
          data.autoFactura.numeroCasa = data.autoFactura.numero_casa;
        }*/
        //Remision
        if (data.nota_credito_debito) {
            data.notaCreditoDebito = data.nota_credito_debito;
        }
        //Remision
        if ((_q = data.remision) === null || _q === void 0 ? void 0 : _q.tipo_responsable) {
            data.remision.tipoResponsable = data.remision.tipo_responsable;
        }
        if ((_r = data.remision) === null || _r === void 0 ? void 0 : _r.fecha_factura) {
            data.remision.fechaFactura = data.remision.fecha_factura;
        }
        if ((_s = data.remision) === null || _s === void 0 ? void 0 : _s.costo_flete) {
            data.remision.costoFlete = data.remision.costo_flete;
        }
        //Documento Asociado
        if (data.documento_asociado) {
            data.documentoAsociado = Object.assign({}, data.documento_asociado);
        }
        if ((_t = data.documentoAsociado) === null || _t === void 0 ? void 0 : _t.numero_retencion) {
            data.documentoAsociado.numeroRetencion = data.documentoAsociado.numero_retencion;
        }
        if ((_u = data.documentoAsociado) === null || _u === void 0 ? void 0 : _u.resolucion_credito_fiscal) {
            data.documentoAsociado.resolucionCreditoFiscal = data.documentoAsociado.resolucion_credito_fiscal;
        }
        if ((_v = data.documentoAsociado) === null || _v === void 0 ? void 0 : _v.tipo_documento_impreso) {
            data.documentoAsociado.tipoDocumentoImpreso = data.documentoAsociado.tipo_documento_impreso;
        }
        if ((_w = data.documentoAsociado) === null || _w === void 0 ? void 0 : _w.constancia_tipo) {
            data.documentoAsociado.constanciaTipo = data.documentoAsociado.constancia_tipo;
        }
        if ((_x = data.documentoAsociado) === null || _x === void 0 ? void 0 : _x.constancia_numero) {
            data.documentoAsociado.constanciaNumero = data.documentoAsociado.constancia_numero;
        }
        if ((_y = data.documentoAsociado) === null || _y === void 0 ? void 0 : _y.constancia_control) {
            data.documentoAsociado.constanciaControl = data.documentoAsociado.constancia_control;
        }
        //Condicion entregas
        if (((_z = data.condicion) === null || _z === void 0 ? void 0 : _z.entregas) && ((_0 = data.condicion) === null || _0 === void 0 ? void 0 : _0.entregas.length) > 0) {
            for (let i = 0; i < data.condicion.entregas.length; i++) {
                const entrega = data.condicion.entregas[i];
                if (entrega.info_tarjeta) {
                    entrega.infoTarjeta = Object.assign({}, entrega.info_tarjeta);
                }
                if ((_1 = entrega.infoTarjeta) === null || _1 === void 0 ? void 0 : _1.razon_social) {
                    entrega.infoTarjeta.razonSocial = entrega.infoTarjeta.razon_social;
                }
                if ((_2 = entrega.infoTarjeta) === null || _2 === void 0 ? void 0 : _2.medio_pago) {
                    entrega.infoTarjeta.medioPago = entrega.infoTarjeta.medio_pago;
                }
                if ((_3 = entrega.infoTarjeta) === null || _3 === void 0 ? void 0 : _3.codigo_autorizacion) {
                    entrega.infoTarjeta.codigoAutorizacion = entrega.infoTarjeta.codigo_autorizacion;
                }
                if (entrega.info_cheque) {
                    entrega.infoCheque = Object.assign({}, entrega.info_cheque);
                }
                if ((_4 = entrega.infoCheque) === null || _4 === void 0 ? void 0 : _4.numero_cheque) {
                    entrega.infoCheque.numeroCheque = entrega.infoCheque.numero_cheque;
                }
            }
        }
        if ((_5 = data.condicion) === null || _5 === void 0 ? void 0 : _5.monto_entrega) {
            data.condicion.montoEntrega = data.condicion.monto_entrega;
        }
        if ((_6 = data.condicion) === null || _6 === void 0 ? void 0 : _6.credito) {
            if (data.condicion.credito.info_cuotas) {
                data.condicion.credito.infoCuotas = [...data.condicion.credito.info_cuotas];
            }
        }
        //Items
        if (data.items && ((_7 = data.items) === null || _7 === void 0 ? void 0 : _7.length) > 0) {
            for (let i = 0; i < data.items.length; i++) {
                const item = data.items[i];
                if (item.partida_arancelaria) {
                    item.partidaArancelaria = item.partida_arancelaria;
                }
                if (item.unidad_medida) {
                    item.unidadMedida = item.unidad_medida;
                }
                //if (item.precio_unitario) {
                //Los valores numericos que pueden aceptar 0 hay que validar de esta manera.
                if (item['precio_unitario'] != null && (item['precio_unitario'] + '').length > 0) {
                    item.precioUnitario = item.precio_unitario;
                }
                if (item.tolerancia_cantidad) {
                    item.toleranciaCantidad = item.tolerancia_cantidad;
                }
                if (item.tolerancia_porcentaje) {
                    item.toleranciaPorcentaje = item.tolerancia_porcentaje;
                }
                if (item.cdc_anticipo) {
                    item.cdcAnticipo = item.cdc_anticipo;
                }
                //if (item.iva_tipo) {
                if (typeof item.iva_tipo != 'undefined') {
                    item.ivaTipo = item.iva_tipo;
                }
                //if (item.iva_base) {
                if (typeof item.iva_base != 'undefined') {
                    item.ivaBase = item.iva_base;
                }
                if (item.numero_serie) {
                    item.numeroSerie = item.numero_serie;
                }
                if (item.numero_pedido) {
                    item.numeroPedido = item.numero_pedido;
                }
                if (item.numero_seguimiento) {
                    item.numeroSeguimiento = item.numero_seguimiento;
                }
                //DNCP
                if (item.dncp) {
                    if (item.dncp.codigo_nivel_general) {
                        item.dncp.codigoNivelGeneral = item.dncp.codigo_nivel_general;
                    }
                    if (item.dncp.codigo_nivel_especifico) {
                        item.dncp.codigoNivelEspecifico = item.dncp.codigo_nivel_especifico;
                    }
                    if (item.dncp.codigo_gtin_producto) {
                        item.dncp.codigoGtinProducto = item.dncp.codigo_gtin_producto;
                    }
                    if (item.dncp.codigo_nivel_paquete) {
                        item.dncp.codigoNivelPaquete = item.dncp.codigo_nivel_paquete;
                    }
                }
                //Importador
                if (item.importador) {
                    if (item.importador.registro_importador) {
                        item.importador.registroImportador = item.importador.registro_importador;
                    }
                    if (item.registro_senave) {
                        item.registroSenave = item.registro_senave;
                    }
                    if (item.registro_entidad_comercial) {
                        item.registroEntidadComercial = item.registro_entidad_comercial;
                    }
                }
                //Sector Automotor
                if (item.sector_automotor) {
                    if (item.sector_automotor.capacidad_motor) {
                        item.sector_automotor.capacidadMotor = item.sector_automotor.capacidad_motor;
                    }
                    if (item.sector_automotor.capacidad_pasajeros) {
                        item.sector_automotor.capacidadPasajeros = item.sector_automotor.capacidad_pasajeros;
                    }
                    if (item.sector_automotor.peso_bruto) {
                        item.sector_automotor.pesoBruto = item.sector_automotor.peso_bruto;
                    }
                    if (item.sector_automotor.peso_neto) {
                        item.sector_automotor.pesoNeto = item.sector_automotor.peso_neto;
                    }
                    if (item.sector_automotor.tipo_combustible) {
                        item.sector_automotor.tipoCombustible = item.sector_automotor.tipo_combustible;
                    }
                    if (item.sector_automotor.numero_motor) {
                        item.sector_automotor.numeroMotor = item.sector_automotor.numero_motor;
                    }
                    if (item.sector_automotor.capacidad_traccion) {
                        item.sector_automotor.capacidadTraccion = item.sector_automotor.capacidad_traccion;
                    }
                    if (item.sector_automotor.tipo_vehiculo) {
                        item.sector_automotor.tipoVehiculo = item.sector_automotor.tipo_vehiculo;
                    }
                }
            }
        }
        //Detalle de Tranposte
        if (data.detalle_transporte) {
            data.detalleTransporte = Object.assign({}, data.detalle_transporte);
        }
        if (data.transporte) {
            //Nueva version quedara solamente data.trasnsporte
            data.detalleTransporte = Object.assign({}, data.transporte);
        }
        if ((_8 = data.detalleTransporte) === null || _8 === void 0 ? void 0 : _8.tipo_responsable) {
            data.detalleTransporte.tipoResponsable = data.detalleTransporte.tipo_responsable;
        }
        if ((_9 = data.detalleTransporte) === null || _9 === void 0 ? void 0 : _9.condicion_negociacion) {
            data.detalleTransporte.condicionNegociacion = data.detalleTransporte.condicion_negociacion;
        }
        if ((_10 = data.detalleTransporte) === null || _10 === void 0 ? void 0 : _10.numero_manifiesto) {
            data.detalleTransporte.numeroManifiesto = data.detalleTransporte.numero_manifiesto;
        }
        if ((_11 = data.detalleTransporte) === null || _11 === void 0 ? void 0 : _11.numero_despacho_importacion) {
            data.detalleTransporte.numeroDespachoImportacion = data.detalleTransporte.numero_despacho_importacion;
        }
        if ((_12 = data.detalleTransporte) === null || _12 === void 0 ? void 0 : _12.inicio_estimado_translado) {
            data.detalleTransporte.inicioEstimadoTranslado = data.detalleTransporte.inicio_estimado_translado;
        }
        if ((_13 = data.detalleTransporte) === null || _13 === void 0 ? void 0 : _13.fin_estimado_translado) {
            data.detalleTransporte.finEstimadoTranslado = data.detalleTransporte.fin_estimado_translado;
        }
        if ((_14 = data.detalleTransporte) === null || _14 === void 0 ? void 0 : _14.pais_destino) {
            data.detalleTransporte.paisDestino = data.detalleTransporte.pais_destino;
        }
        if ((_15 = data.detalleTransporte) === null || _15 === void 0 ? void 0 : _15.pais_destino_nombre) {
            data.detalleTransporte.paisDestinoNombre = data.detalleTransporte.pais_destino_nombre;
        }
        //Falta los de salida, entrega, etc.
        //Detalle de Transporte Salida
        if ((_17 = (_16 = data.detalleTransporte) === null || _16 === void 0 ? void 0 : _16.salida) === null || _17 === void 0 ? void 0 : _17.numero_casa) {
            //Nueva version quedara solamente data.trasnsporte
            data.detalleTransporte.salida.numeroCasa = data.detalleTransporte.salida.numero_casa;
        }
        if ((_19 = (_18 = data.detalleTransporte) === null || _18 === void 0 ? void 0 : _18.salida) === null || _19 === void 0 ? void 0 : _19.complemento_direccion1) {
            data.detalleTransporte.salida.complementoDireccion1 = data.detalleTransporte.salida.complemento_direccion1;
        }
        if ((_21 = (_20 = data.detalleTransporte) === null || _20 === void 0 ? void 0 : _20.salida) === null || _21 === void 0 ? void 0 : _21.complemento_direccion2) {
            data.detalleTransporte.salida.complementoDireccion2 = data.detalleTransporte.salida.complemento_direccion2;
        }
        if ((_23 = (_22 = data.detalleTransporte) === null || _22 === void 0 ? void 0 : _22.salida) === null || _23 === void 0 ? void 0 : _23.departamento_descripcion) {
            data.detalleTransporte.salida.departamentoDescripcion = data.detalleTransporte.salida.departamento_descripcion;
        }
        if ((_25 = (_24 = data.detalleTransporte) === null || _24 === void 0 ? void 0 : _24.salida) === null || _25 === void 0 ? void 0 : _25.distrito_descripcion) {
            data.detalleTransporte.salida.distritoDescripcion = data.detalleTransporte.salida.distrito_descripcion;
        }
        if ((_27 = (_26 = data.detalleTransporte) === null || _26 === void 0 ? void 0 : _26.salida) === null || _27 === void 0 ? void 0 : _27.ciudad_descripcion) {
            data.detalleTransporte.salida.ciudadDescripcion = data.detalleTransporte.salida.ciudad_descripcion;
        }
        if ((_29 = (_28 = data.detalleTransporte) === null || _28 === void 0 ? void 0 : _28.salida) === null || _29 === void 0 ? void 0 : _29.pais_descripcion) {
            data.detalleTransporte.salida.paisDescripcion = data.detalleTransporte.salida.pais_descripcion;
        }
        if ((_31 = (_30 = data.detalleTransporte) === null || _30 === void 0 ? void 0 : _30.salida) === null || _31 === void 0 ? void 0 : _31.telefono_contacto) {
            data.detalleTransporte.salida.telefonoContacto = data.detalleTransporte.salida.telefono_contacto;
        }
        //Detalle de Transporte Entrega
        if ((_33 = (_32 = data.detalleTransporte) === null || _32 === void 0 ? void 0 : _32.entrega) === null || _33 === void 0 ? void 0 : _33.numero_casa) {
            //Nueva version quedara solamente data.trasnsporte
            data.detalleTransporte.entrega.numeroCasa = data.detalleTransporte.entrega.numero_casa;
        }
        if ((_35 = (_34 = data.detalleTransporte) === null || _34 === void 0 ? void 0 : _34.entrega) === null || _35 === void 0 ? void 0 : _35.complemento_direccion1) {
            data.detalleTransporte.entrega.complementoDireccion1 = data.detalleTransporte.entrega.complemento_direccion1;
        }
        if ((_37 = (_36 = data.detalleTransporte) === null || _36 === void 0 ? void 0 : _36.entrega) === null || _37 === void 0 ? void 0 : _37.complemento_direccion2) {
            data.detalleTransporte.entrega.complementoDireccion2 = data.detalleTransporte.entrega.complemento_direccion2;
        }
        if ((_39 = (_38 = data.detalleTransporte) === null || _38 === void 0 ? void 0 : _38.entrega) === null || _39 === void 0 ? void 0 : _39.departamento_descripcion) {
            data.detalleTransporte.entrega.departamentoDescripcion = data.detalleTransporte.entrega.departamento_descripcion;
        }
        if ((_41 = (_40 = data.detalleTransporte) === null || _40 === void 0 ? void 0 : _40.entrega) === null || _41 === void 0 ? void 0 : _41.distrito_descripcion) {
            data.detalleTransporte.entrega.distritoDescripcion = data.detalleTransporte.entrega.distrito_descripcion;
        }
        if ((_43 = (_42 = data.detalleTransporte) === null || _42 === void 0 ? void 0 : _42.entrega) === null || _43 === void 0 ? void 0 : _43.ciudad_descripcion) {
            data.detalleTransporte.entrega.ciudadDescripcion = data.detalleTransporte.entrega.ciudad_descripcion;
        }
        if ((_45 = (_44 = data.detalleTransporte) === null || _44 === void 0 ? void 0 : _44.entrega) === null || _45 === void 0 ? void 0 : _45.pais_descripcion) {
            data.detalleTransporte.entrega.paisDescripcion = data.detalleTransporte.entrega.pais_descripcion;
        }
        if ((_47 = (_46 = data.detalleTransporte) === null || _46 === void 0 ? void 0 : _46.entrega) === null || _47 === void 0 ? void 0 : _47.telefono_contacto) {
            data.detalleTransporte.entrega.telefonoContacto = data.detalleTransporte.entrega.telefono_contacto;
        }
        // Detalle de Transporte Vehiculo
        if ((_49 = (_48 = data.detalleTransporte) === null || _48 === void 0 ? void 0 : _48.vehiculo) === null || _49 === void 0 ? void 0 : _49.documento_tipo) {
            data.detalleTransporte.vehiculo.documentoTipo = data.detalleTransporte.vehiculo.documento_tipo;
        }
        if ((_51 = (_50 = data.detalleTransporte) === null || _50 === void 0 ? void 0 : _50.vehiculo) === null || _51 === void 0 ? void 0 : _51.documento_numero) {
            data.detalleTransporte.vehiculo.documentoNumero = data.detalleTransporte.vehiculo.documento_numero;
        }
        if ((_53 = (_52 = data.detalleTransporte) === null || _52 === void 0 ? void 0 : _52.vehiculo) === null || _53 === void 0 ? void 0 : _53.numero_matricula) {
            data.detalleTransporte.vehiculo.numeroMatricula = data.detalleTransporte.vehiculo.numero_matricula;
        }
        if ((_55 = (_54 = data.detalleTransporte) === null || _54 === void 0 ? void 0 : _54.vehiculo) === null || _55 === void 0 ? void 0 : _55.numero_vuelo) {
            data.detalleTransporte.vehiculo.numeroVuelo = data.detalleTransporte.vehiculo.numero_vuelo;
        }
        // Detalle de Transporte Transportista
        if ((_57 = (_56 = data.detalleTransporte) === null || _56 === void 0 ? void 0 : _56.transportista) === null || _57 === void 0 ? void 0 : _57.documento_tipo) {
            data.detalleTransporte.transportista.documentoTipo = data.detalleTransporte.transportista.documento_tipo;
        }
        if ((_59 = (_58 = data.detalleTransporte) === null || _58 === void 0 ? void 0 : _58.transportista) === null || _59 === void 0 ? void 0 : _59.documento_numero) {
            data.detalleTransporte.transportista.documentoNumero = data.detalleTransporte.transportista.documento_numero;
        }
        if ((_61 = (_60 = data.detalleTransporte) === null || _60 === void 0 ? void 0 : _60.transportista) === null || _61 === void 0 ? void 0 : _61.pais_descripcion) {
            data.detalleTransporte.transportista.paisDescripcion = data.detalleTransporte.transportista.pais_descripcion;
        }
        // Detalle de Transporte Transportista Chofer
        if ((_64 = (_63 = (_62 = data.detalleTransporte) === null || _62 === void 0 ? void 0 : _62.transportista) === null || _63 === void 0 ? void 0 : _63.chofer) === null || _64 === void 0 ? void 0 : _64.documento_numero) {
            data.detalleTransporte.transportista.chofer.documentoNumero =
                data.detalleTransporte.transportista.chofer.documento_numero;
        }
        // Data Complementarios
        if ((_65 = data.complementarios) === null || _65 === void 0 ? void 0 : _65.orden_compra) {
            data.complementarios.ordenCompra = data.complementarios.orden_compra;
        }
        if ((_66 = data.complementarios) === null || _66 === void 0 ? void 0 : _66.orden_venta) {
            data.complementarios.ordenVenta = data.complementarios.orden_venta;
        }
        if ((_67 = data.complementarios) === null || _67 === void 0 ? void 0 : _67.numero_asiento) {
            data.complementarios.numeroAsiento = data.complementarios.numero_asiento;
        }
        // Data complementarios carga
        if ((_69 = (_68 = data.complementarios) === null || _68 === void 0 ? void 0 : _68.carga) === null || _69 === void 0 ? void 0 : _69.orden_compra) {
            data.complementarios.carga.ordenCompra = data.complementarios.carga.orden_compra;
        }
        if ((_71 = (_70 = data.complementarios) === null || _70 === void 0 ? void 0 : _70.carga) === null || _71 === void 0 ? void 0 : _71.orden_venta) {
            data.complementarios.carga.ordenVenta = data.complementarios.carga.orden_venta;
        }
        if ((_73 = (_72 = data.complementarios) === null || _72 === void 0 ? void 0 : _72.carga) === null || _73 === void 0 ? void 0 : _73.numero_asiento) {
            data.complementarios.carga.numeroAsiento = data.complementarios.carga.numero_asiento;
        }
        //Sector Energia
        if (data.sector_energia_electrica) {
            data.sectorEnergiaElectrica = Object.assign({}, data.sector_energia_electrica);
        }
        if ((_74 = data.sectorEnergiaElectrica) === null || _74 === void 0 ? void 0 : _74.numero_medidor) {
            data.sectorEnergiaElectrica.numeroMedidor = data.sectorEnergiaElectrica.numero_medidor;
        }
        if ((_75 = data.sectorEnergiaElectrica) === null || _75 === void 0 ? void 0 : _75.codigo_actividad) {
            data.sectorEnergiaElectrica.codigoActividad = data.sectorEnergiaElectrica.codigo_actividad;
        }
        if ((_76 = data.sectorEnergiaElectrica) === null || _76 === void 0 ? void 0 : _76.codigo_categoria) {
            data.sectorEnergiaElectrica.codigoCategoria = data.sectorEnergiaElectrica.codigo_categoria;
        }
        if ((_77 = data.sectorEnergiaElectrica) === null || _77 === void 0 ? void 0 : _77.lectura_anterior) {
            data.sectorEnergiaElectrica.lecturaAnterior = data.sectorEnergiaElectrica.lectura_anterior;
        }
        if ((_78 = data.sectorEnergiaElectrica) === null || _78 === void 0 ? void 0 : _78.lectura_actual) {
            data.sectorEnergiaElectrica.lecturaActual = data.sectorEnergiaElectrica.lectura_actual;
        }
        //Sector Seguros
        if (data.sector_seguros) {
            data.sectorSeguros = Object.assign({}, data.sector_seguros);
        }
        if ((_79 = data.sectorSeguros) === null || _79 === void 0 ? void 0 : _79.codigo_aseguradora) {
            data.sectorSeguros.codigoAseguradora = data.sectorSeguros.codigo_aseguradora;
        }
        if ((_80 = data.sectorSeguros) === null || _80 === void 0 ? void 0 : _80.codigo_poliza) {
            data.sectorSeguros.codigoPoliza = data.sectorSeguros.codigo_poliza;
        }
        if ((_81 = data.sectorSeguros) === null || _81 === void 0 ? void 0 : _81.numero_poliza) {
            data.sectorSeguros.numeroPoliza = data.sectorSeguros.numero_poliza;
        }
        if ((_82 = data.sectorSeguros) === null || _82 === void 0 ? void 0 : _82.vigencia_unidad) {
            data.sectorSeguros.vigenciaUnidad = data.sectorSeguros.vigencia_unidad;
        }
        if ((_83 = data.sectorSeguros) === null || _83 === void 0 ? void 0 : _83.inicio_vigencia) {
            data.sectorSeguros.inicioVigencia = data.sectorSeguros.inicio_vigencia;
        }
        if ((_84 = data.sectorSeguros) === null || _84 === void 0 ? void 0 : _84.fin_vigencia) {
            data.sectorSeguros.finVigencia = data.sectorSeguros.fin_vigencia;
        }
        if ((_85 = data.sectorSeguros) === null || _85 === void 0 ? void 0 : _85.codigo_interno_item) {
            data.sectorSeguros.codigoInternoItem = data.sectorSeguros.codigo_interno_item;
        }
    }
    /**
     * Añade algunos valores por defecto al JSON de entrada, valido para
     * todas las operaciones
     * @param data
     */
    addDefaultValues(data) {
        if (constants_service_1.default.tiposDocumentos.filter((um) => um.codigo === +data['tipoDocumento']).length == 0) {
            //No quitar este throw
            throw new Error("Tipo de Documento '" +
                data['tipoDocumento'] +
                "' en data.tipoDocumento no válido. Valores: " +
                constants_service_1.default.tiposDocumentos.map((a) => a.codigo + '-' + a.descripcion));
        }
        data['tipoDocumentoDescripcion'] = constants_service_1.default.tiposDocumentos.filter((td) => td.codigo == +data['tipoDocumento'])[0]['descripcion'];
        if (!data['tipoEmision']) {
            data['tipoEmision'] = 1;
        }
        if (!data['tipoTransaccion']) {
            data['tipoTransaccion'] = 1;
        }
        if (!data['moneda']) {
            data['moneda'] = 'PYG';
        }
        if (data['moneda'] != 'PYG') {
            if (!data['condicionTipoCambio']) {
                data['condicionTipoCambio'] = 1; //Por el Global
            }
        }
        //Valores por defecto para los items
        if (data['items'] && data['items'].length > 0) {
            for (let i = 0; i < data['items'].length; i++) {
                const item = data['items'][i];
                if (!item['unidadMedida']) {
                    item['unidadMedida'] = 77;
                }
            }
        }
    }
    generateRte(params) {
        this.json = {
            rDE: {
                $: {
                    xmlns: 'http://ekuatia.set.gov.py/sifen/xsd',
                    'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',
                    'xsi:schemaLocation': 'http://ekuatia.set.gov.py/sifen/xsd siRecepDE_v150.xsd',
                },
                dVerFor: params.version,
            },
        };
    }
    generateDe(params, data) {
        if (params['ruc'].indexOf('-') == -1) {
            //throw new Error('RUC debe contener dígito verificador en params.ruc');
        }
        const rucEmisor = params['ruc'].split('-')[0];
        const dvEmisor = params['ruc'].split('-')[1];
        const id = this.codigoControl;
        let fechaFirmaDigital = new Date();
        if (data.fechaFirmaDigital) {
            fechaFirmaDigital = new Date(data.fechaFirmaDigital);
        }
        let digitoVerificadorString = this.codigoControl + '';
        const jsonResult = {
            $: {
                Id: id,
            },
            dDVId: digitoVerificadorString.substring(digitoVerificadorString.length - 1, digitoVerificadorString.length),
            dFecFirma: FechaUtil_service_1.default.convertToJSONFormat(fechaFirmaDigital),
            dSisFact: 1,
        };
        return jsonResult;
    }
    /**
       * Datos inerentes a la operacion
       * <gOpeDE>
              <iTipEmi>1</iTipEmi>
              <dDesTipEmi>Normal</dDesTipEmi>
              <dCodSeg>000000023</dCodSeg>
              <dInfoEmi>1</dInfoEmi>
              <dInfoFisc>Información de interés del Fisco respecto al DE</dInfoFisc>
          </gOpeDE>
  
       * @param params
       * @param data
       * @param options
       */
    generateDatosOperacion(params, data) {
        if (params['ruc'].indexOf('-') == -1) {
            //throw new Error('RUC debe contener dígito verificador en params.ruc');
        }
        const rucEmisor = params['ruc'].split('-')[0];
        const dvEmisor = params['ruc'].split('-')[1];
        const id = jsonDteAlgoritmos_service_1.default.generateCodigoControl(params, data, this.codigoSeguridad);
        const digitoVerificador = jsonDteAlgoritmos_service_1.default.calcularDigitoVerificador(rucEmisor, 11);
        if (id.length != 44) {
        }
        const codigoSeguridadAleatorio = this.codigoSeguridad;
        if (constants_service_1.default.tiposEmisiones.filter((um) => um.codigo === data['tipoEmision']).length == 0) {
            /*throw new Error(
              "Tipo de Emisión '" +
                data['tipoEmision'] +
                "' en data.tipoEmision no válido. Valores: " +
                constanteService.tiposEmisiones.map((a) => a.codigo + '-' + a.descripcion),
            );*/
        }
        this.json['rDE']['DE']['gOpeDE'] = {
            iTipEmi: data['tipoEmision'],
            dDesTipEmi: constants_service_1.default.tiposEmisiones.filter((td) => td.codigo == data['tipoEmision'])[0]['descripcion'],
            dCodSeg: codigoSeguridadAleatorio,
        };
        if (data['observacion'] && data['observacion'].length > 0) {
            this.json['rDE']['DE']['gOpeDE']['dInfoEmi'] = data['observacion'];
        }
        if (data['descripcion'] && data['descripcion'].length > 0) {
            this.json['rDE']['DE']['gOpeDE']['dInfoFisc'] = data['descripcion'];
        }
    }
    /**
       * Genera los datos del timbrado
       *
       * <gTimb>
              <iTiDE>1</iTiDE>
              <dDesTiDE>Factura electrónica</dDesTiDE>
              <dNumTim>12345678</dNumTim>
              <dEst>001</dEst>
              <dPunExp>001</dPunExp>
              <dNumDoc>1000050</dNumDoc>
              <dSerieNum>AB</dSerieNum>
              <dFeIniT>2019-08-13</dFeIniT>
          </gTimb>
  
       * @param params
       * @param data
       * @param options
       */
    generateDatosTimbrado(params, data) {
        this.json['rDE']['DE']['gTimb'] = {
            iTiDE: data['tipoDocumento'],
            dDesTiDE: data['tipoDocumentoDescripcion'],
            dNumTim: params['timbradoNumero'],
            dEst: StringUtil_service_1.default.leftZero(data['establecimiento'], 3),
            dPunExp: StringUtil_service_1.default.leftZero(data['punto'], 3),
            dNumDoc: StringUtil_service_1.default.leftZero(data['numero'], 7),
        };
        if (data['numeroSerie']) {
            this.json['rDE']['DE']['gTimb']['dSerieNum'] = data['numeroSerie'];
        }
        if (data['serie']) {
            this.json['rDE']['DE']['gTimb']['dSerieNum'] = data['serie'];
        }
        //if (data['numeroSerie']) {
        this.json['rDE']['DE']['gTimb']['dFeIniT'] = params['timbradoFecha'].substring(0, 10);
        //}
    }
    /**
       * Genera los campos generales, divide las actividades en diferentes metodos
       *
       *  <gDatGralOpe>
              <dFeEmiDE>2020-05-07T15:03:57</dFeEmiDE>
          </gDatGralOpe>
       *
       * @param params
       * @param data
       * @param options
       */
    generateDatosGenerales(params, data, config) {
        this.json['rDE']['DE']['gDatGralOpe'] = {
            dFeEmiDE: data['fecha'],
        };
        this.generateDatosGeneralesInherentesOperacion(params, data, config);
        this.generateDatosGeneralesEmisorDE(params, data);
        if (config.userObjectRemove == false) {
            //Si está TRUE no crea el objeto usuario
            if (data['usuario']) {
                //No es obligatorio
                this.generateDatosGeneralesResponsableGeneracionDE(params, data);
            }
        }
        this.generateDatosGeneralesReceptorDE(params, data);
    }
    /**
       * D1. Campos inherentes a la operación comercial (D010-D099)
       * Pertenece al grupo de datos generales
       *
       * <gOpeCom>
              <iTipTra>1</iTipTra>
              <dDesTipTra>Venta de mercadería</dDesTipTra>
              <iTImp>1</iTImp>
              <dDesTImp>IVA</dDesTImp>
              <cMoneOpe>PYG</cMoneOpe>
              <dDesMoneOpe>Guarani</dDesMoneOpe>
          </gOpeCom>
       * @param params
       * @param data
       * @param options
       */
    generateDatosGeneralesInherentesOperacion(params, data, config) {
        if (data['tipoDocumento'] == 7) {
            //C002
            return; //No informa si el tipo de documento es 7
        }
        let moneda = data['moneda'];
        if (!moneda && config.defaultValues === true) {
            moneda = 'PYG';
        }
        this.json['rDE']['DE']['gDatGralOpe']['gOpeCom'] = {};
        if (data['tipoDocumento'] == 1 || data['tipoDocumento'] == 4) {
            //Obligatorio informar iTipTra D011
            if (!data['tipoTransaccion']) {
                //throw new Error('Debe proveer el Tipo de Transacción en data.tipoTransaccion');
            }
            this.json['rDE']['DE']['gDatGralOpe']['gOpeCom']['iTipTra'] = data['tipoTransaccion'];
            this.json['rDE']['DE']['gDatGralOpe']['gOpeCom']['dDesTipTra'] = constants_service_1.default.tiposTransacciones.filter((tt) => tt.codigo == data['tipoTransaccion'])[0]['descripcion'];
        }
        this.json['rDE']['DE']['gDatGralOpe']['gOpeCom']['iTImp'] = data['tipoImpuesto']; //D013
        this.json['rDE']['DE']['gDatGralOpe']['gOpeCom']['dDesTImp'] = constants_service_1.default.tiposImpuestos.filter((ti) => ti.codigo == data['tipoImpuesto'])[0]['descripcion']; //D013
        this.json['rDE']['DE']['gDatGralOpe']['gOpeCom']['cMoneOpe'] = moneda; //D015
        this.json['rDE']['DE']['gDatGralOpe']['gOpeCom']['dDesMoneOpe'] = constants_service_1.default.monedas.filter((m) => m.codigo == moneda)[0]['descripcion'];
        if (moneda != 'PYG') {
            if (!data['condicionTipoCambio']) {
                //throw new Error('Debe informar el tipo de Cambio en data.condicionTipoCambio');
            }
            //Obligatorio informar dCondTiCam D017
            this.json['rDE']['DE']['gDatGralOpe']['gOpeCom']['dCondTiCam'] = data['condicionTipoCambio'];
        }
        if (data['condicionTipoCambio'] == 1 && moneda != 'PYG') {
            if (!(data['cambio'] && data['cambio'] > 0)) {
                //throw new Error('Debe informar el valor del Cambio en data.cambio');
            }
            //Obligatorio informar dCondTiCam D018
            this.json['rDE']['DE']['gDatGralOpe']['gOpeCom']['dTiCam'] = data['cambio'];
        }
        if (data['condicionAnticipo']) {
            this.json['rDE']['DE']['gDatGralOpe']['gOpeCom']['iCondAnt'] = data['condicionAnticipo'];
            this.json['rDE']['DE']['gDatGralOpe']['gOpeCom']['dDesCondAnt'] =
                'Anticipo ' +
                    constants_service_1.default.globalPorItem.filter((ca) => ca.codigo == data['condicionAnticipo'])[0]['descripcion'];
        }
        if (data['obligaciones'] && Array.isArray(data['obligaciones'])) {
            let gOblAfe = new Array();
            for (let i = 0; i < data['obligaciones'].length; i++) {
                let gOblAfeItem = {};
                gOblAfeItem['cOblAfe'] = data['obligaciones'][i]['codigo'];
                //gOblAfeItem['dDesOblAfe'] = params['obligaciones'][i]['descripcion'];
                gOblAfeItem['dDesOblAfe'] = constants_service_1.default.obligaciones.filter((ca) => ca.codigo == +data['obligaciones'][i]['codigo'])[0]['descripcion'];
                gOblAfe.push(gOblAfeItem);
            }
            this.json['rDE']['DE']['gDatGralOpe']['gOpeCom']['gOblAfe'] = gOblAfe;
        }
    }
    /**
     * D2. Campos que identifican al emisor del Documento Electrónico DE (D100-D129)
     * Pertenece al grupo de datos generales
     *
     * @param params
     * @param data
     * @param options
     */
    generateDatosGeneralesEmisorDE(params, data) {
        if (!(params && params.establecimientos)) {
            //throw new Error('Debe proveer un Array con la información de los establecimientos en params');
        }
        //Validar si el establecimiento viene en params
        let establecimiento = StringUtil_service_1.default.leftZero(data['establecimiento'], 3);
        //let punto = stringUtilService.leftZero(data['punto'], 3);
        if (params.establecimientos.filter((um) => um.codigo === establecimiento).length == 0) {
            /*throw new Error(
              "Establecimiento '" +
                establecimiento +
                "' no encontrado en params.establecimientos*.codigo. Valores: " +
                params.establecimientos.map((a: any) => a.codigo + '-' + a.denominacion),
            );*/
        }
        if (params['ruc'].indexOf('-') == -1) {
            //throw new Error('RUC debe contener dígito verificador en params.ruc');
        }
        this.json['rDE']['DE']['gDatGralOpe']['gEmis'] = {};
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dRucEm'] = params['ruc'].split('-')[0];
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dDVEmi'] = params['ruc'].split('-')[1];
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['iTipCont'] = params['tipoContribuyente'];
        if (typeof params['tipoRegimen'] != undefined) {
            this.json['rDE']['DE']['gDatGralOpe']['gEmis']['cTipReg'] = params['tipoRegimen'];
        }
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dNomEmi'] = params['razonSocial'];
        if (params['nombreFantasia'] && (params['nombreFantasia'] + '').length > 0) {
            this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dNomFanEmi'] = params['nombreFantasia'];
        }
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dDirEmi'] = params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['direccion'];
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dNumCas'] = params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['numeroCasa'];
        let dCompDir1 = params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['complementoDireccion1'];
        if (dCompDir1 && (dCompDir1 + '').length > 1) {
            this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dCompDir1'] = dCompDir1;
        }
        let dCompDir2 = params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['complementoDireccion2'];
        if (dCompDir2 && (dCompDir2 + '').length > 1) {
            this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dCompDir2'] = dCompDir2;
        }
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['cDepEmi'] = params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['departamento'];
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dDesDepEmi'] = constants_service_1.default.departamentos.filter((td) => td.codigo === params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['departamento'])[0]['descripcion'];
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['cDisEmi'] = params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['distrito'];
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dDesDisEmi'] = constants_service_1.default.distritos.filter((td) => td.codigo === params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['distrito'])[0]['descripcion'];
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['cCiuEmi'] = params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['ciudad'];
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dDesCiuEmi'] = constants_service_1.default.ciudades.filter((td) => td.codigo === params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['ciudad'])[0]['descripcion'];
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dTelEmi'] = params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['telefono'];
        if (params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['email']) {
            let email = new String(params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['email']); //Hace una copia, para no alterar.
            //Verificar si tiene varios correos.
            if (email.indexOf(',') > -1) {
                //Si el Email tiene , (coma) entonces va enviar solo el primer valor, ya que la SET no acepta Comas
                email = email.split(',')[0].trim();
            }
            this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dEmailE'] = email.trim();
        }
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['dDenSuc'] = params['establecimientos'].filter((e) => e.codigo === establecimiento)[0]['denominacion'];
        if (params['actividadesEconomicas'] && params['actividadesEconomicas'].length > 0) {
            this.json['rDE']['DE']['gDatGralOpe']['gEmis']['gActEco'] = [];
            for (let i = 0; i < params['actividadesEconomicas'].length; i++) {
                const actividadEconomica = params['actividadesEconomicas'][i];
                const gActEco = {
                    cActEco: actividadEconomica.codigo,
                    dDesActEco: actividadEconomica.descripcion,
                };
                this.json['rDE']['DE']['gDatGralOpe']['gEmis']['gActEco'].push(gActEco);
            }
        }
        else {
            //throw new Error('Debe proveer el array de actividades económicas en params.actividadesEconomicas');
        }
    }
    /**
     * Datos generales del responsable de generacion del DE
     *
     * @param params
     * @param data
     * @param options
     */
    generateDatosGeneralesResponsableGeneracionDE(params, data) {
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['gRespDE'] = {
            iTipIDRespDE: data['usuario']['documentoTipo'],
            dDTipIDRespDE: constants_service_1.default.tiposDocumentosIdentidades.filter((td) => td.codigo === +data['usuario']['documentoTipo'])[0]['descripcion'],
        };
        if (data['usuario']['documentoTipo'] == 9) {
            this.json['rDE']['DE']['gDatGralOpe']['gEmis']['gRespDE']['dDTipIDRespDE'] =
                data['usuario']['documentoTipoDescripcion'];
        }
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['gRespDE']['dNumIDRespDE'] = data['usuario']['documentoNumero'];
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['gRespDE']['dNomRespDE'] = data['usuario']['nombre'];
        this.json['rDE']['DE']['gDatGralOpe']['gEmis']['gRespDE']['dCarRespDE'] = data['usuario']['cargo'];
    }
    /**
       * Datos generales del receptor del documento electrónico
       * Pertenece al grupo de datos generales
       *
       * <gDatRec>
                  <iNatRec>1</iNatRec>
                  <iTiOpe>1</iTiOpe>
                  <cPaisRec>PRY</cPaisRec>
                  <dDesPaisRe>Paraguay</dDesPaisRe>
                  <iTiContRec>2</iTiContRec>
                  <dRucRec>00000002</dRucRec>
                  <dDVRec>7</dDVRec>
                  <dNomRec>RECEPTOR DEL DOCUMENTO</dNomRec>
                  <dDirRec>CALLE 1 ENTRE CALLE 2 Y CALLE 3</dDirRec>
                  <dNumCasRec>123</dNumCasRec>
                  <cDepRec>1</cDepRec>
                  <dDesDepRec>CAPITAL</dDesDepRec>
                  <cDisRec>1</cDisRec>
                  <dDesDisRec>ASUNCION (DISTRITO)</dDesDisRec>
                  <cCiuRec>1</cCiuRec>
                  <dDesCiuRec>ASUNCION (DISTRITO)</dDesCiuRec>
                  <dTelRec>012123456</dTelRec>
                  <dCodCliente>AAA</dCodCliente>
              </gDatRec>
       *
       * @param params
       * @param data
       * @param options
       */
    generateDatosGeneralesReceptorDE(params, data) {
        this.json['rDE']['DE']['gDatGralOpe']['gDatRec'] = {
            iNatRec: data['cliente']['contribuyente'] ? 1 : 2,
            iTiOpe: +data['cliente']['tipoOperacion'],
            cPaisRec: data['cliente']['pais'],
            dDesPaisRe: constants_service_1.default.paises.filter((pais) => pais.codigo === data['cliente']['pais'])[0]['descripcion'],
        };
        if (data['cliente']['contribuyente']) {
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['iTiContRec'] = data['cliente']['tipoContribuyente'];
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dRucRec'] = (data['cliente']['ruc'].split('-')[0] + '').trim();
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dDVRec'] = (data['cliente']['ruc'].split('-')[1] + '').trim();
        }
        if (!data['cliente']['contribuyente'] && data['cliente']['tipoOperacion']) {
            //Obligatorio completar D210
            if (data['cliente']['documentoTipo']) {
                this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['iTipIDRec'] = +data['cliente']['documentoTipo'];
                this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dDTipIDRec'] =
                    constants_service_1.default.tiposDocumentosReceptor.filter((tdr) => tdr.codigo === +data['cliente']['documentoTipo'])[0]['descripcion'];
            }
            if (+data['cliente']['documentoTipo'] == 9) {
                this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dDTipIDRec'] = data['cliente']['documentoTipoDescripcion'];
            }
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dNumIDRec'] = (data['cliente']['documentoNumero'] + '').trim();
            if (+data['cliente']['documentoTipo'] === 5) {
                //Si es innominado completar con cero
                this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dNumIDRec'] = '0';
                this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dNomRec'] = 'Sin Nombre';
            }
        }
        this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dNomRec'] = data['cliente']['razonSocial'].trim();
        if (data['cliente']['nombreFantasia']) {
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dNomFanRec'] = data['cliente']['nombreFantasia'].trim();
        }
        if (data['cliente']['direccion']) {
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dDirRec'] = data['cliente']['direccion'].trim();
        }
        if (data['cliente']['numeroCasa']) {
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dNumCasRec'] = (data['cliente']['numeroCasa'] + '').trim();
        }
        //
        if (data['cliente']['direccion'] && +data['cliente']['tipoOperacion'] != 4) {
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['cDepRec'] = +data['cliente']['departamento'];
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dDesDepRec'] = constants_service_1.default.departamentos.filter((td) => td.codigo === +data['cliente']['departamento'])[0]['descripcion'];
        }
        if (data['cliente']['direccion'] && +data['cliente']['tipoOperacion'] != 4) {
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['cDisRec'] = +data['cliente']['distrito'];
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dDesDisRec'] = constants_service_1.default.distritos.filter((td) => td.codigo === +data['cliente']['distrito'])[0]['descripcion'];
        }
        if (data['cliente']['direccion'] && +data['cliente']['tipoOperacion'] != 4) {
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['cCiuRec'] = +data['cliente']['ciudad'];
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dDesCiuRec'] = constants_service_1.default.ciudades.filter((td) => td.codigo === +data['cliente']['ciudad'])[0]['descripcion'];
        }
        //Asignar null a departamento, distrito y ciudad si tipoOperacion = 4
        if (data['cliente']['telefono']) {
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec'].dTelRec = (data['cliente']['telefono'] + '').trim();
        }
        if (data['cliente']['celular']) {
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec'].dCelRec = (data['cliente']['celular'] + '').trim();
        }
        if (data['cliente']['email']) {
            let email = new String(data['cliente']['email']); //Hace una copia, para no alterar.
            //Verificar si tiene varios correos.
            if (email.indexOf(',') > -1) {
                //Si el Email tiene , (coma) entonces va enviar solo el primer valor, ya que la SET no acepta Comas
                email = email.split(',')[0].trim();
            }
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec'].dEmailRec = email.trim();
        }
        if (data['cliente']['codigo']) {
            this.json['rDE']['DE']['gDatGralOpe']['gDatRec']['dCodCliente'] = (data['cliente']['codigo'] + '').trim();
        }
    }
    /**
     * Campos que seran especificos de acuerdo a cada tipo de documento electronico
     * Se dividiran en diferentes métodos por cada tipo de factura.
     *
     * @param params
     * @param data
     * @param options
     */
    generateDatosEspecificosPorTipoDE(params, data, config) {
        this.json['rDE']['DE']['gDtipDE'] = {};
        if (+data['tipoDocumento'] === 1) {
            this.generateDatosEspecificosPorTipoDE_FacturaElectronica(params, data, config);
        }
        if (+data['tipoDocumento'] === 4) {
            this.generateDatosEspecificosPorTipoDE_Autofactura(params, data);
        }
        if (+data['tipoDocumento'] === 5 || data['tipoDocumento'] === 6) {
            this.generateDatosEspecificosPorTipoDE_NotaCreditoDebito(params, data);
        }
        if (+data['tipoDocumento'] === 7) {
            this.generateDatosEspecificosPorTipoDE_RemisionElectronica(params, data);
        }
    }
    /**
     * Datos especificos para la factura electronica
     *
     * @param params
     * @param data
     * @param options
     */
    generateDatosEspecificosPorTipoDE_FacturaElectronica(params, data, config) {
        if (constants_service_1.default.indicadoresPresencias.filter((um) => um.codigo === +data['factura']['presencia']).length ==
            0) {
            /*throw new Error(
              "Indicador de Presencia '" +
                data['factura']['presencia'] +
                "' en data.factura.presencia no encontrado. Valores: " +
                constanteService.indicadoresPresencias.map((a: any) => a.codigo + '-' + a.descripcion),
            );*/
        }
        this.json['rDE']['DE']['gDtipDE']['gCamFE'] = {
            iIndPres: data['factura']['presencia'],
            dDesIndPres: constants_service_1.default.indicadoresPresencias.filter((ip) => ip.codigo === +data['factura']['presencia'])[0]['descripcion'],
        };
        if (data['factura']['fechaEnvio']) {
            let fechaFactura = new Date(data['fecha']);
            let fechaEnvio = new Date(data['factura']['fechaEnvio']);
            if (fechaFactura.getTime() > fechaEnvio.getTime()) {
                /*throw new Error(
                  "La Fecha de envío '" +
                    data['factura']['fechaEnvio'] +
                    "'en data.factura.fechaEnvio, debe ser despues de la fecha de Factura",
                );*/
            }
            this.json['rDE']['DE']['gDtipDE']['gCamFE']['dFecEmNR'] = data['factura']['fechaEnvio'];
        }
        if (data['cliente']['tipoOperacion'] === 3) {
            this.generateDatosEspecificosPorTipoDE_ComprasPublicas(params, data);
        }
    }
    /**
     * Datos especificos cuando el tipo de operacion del receptor es B2G (Campo D202)
     * Dentro de la factura electronica
     *
     * @param params
     * @param data
     * @param options
     */
    generateDatosEspecificosPorTipoDE_ComprasPublicas(params, data) {
        if (!(data['dncp'] && data['dncp']['modalidad'] && data['dncp']['modalidad'].length > 0)) {
            //throw new Error('Debe informar la modalidad de Contratación DNCP en data.dncp.modalidad');
        }
        if (!(data['dncp'] && data['dncp']['entidad'] && data['dncp']['entidad'].length > 0)) {
            //throw new Error('Debe informar la entidad de Contratación DNCP en data.dncp.entidad');
        }
        if (!(data['dncp'] && data['dncp']['año'] && data['dncp']['año'].length > 0)) {
            //throw new Error('Debe informar la año de Contratación DNCP en data.dncp.año');
        }
        if (!(data['dncp'] && data['dncp']['secuencia'] && data['dncp']['secuencia'].length > 0)) {
            //throw new Error('Debe informar la secuencia de Contratación DNCP en data.dncp.secuencia');
        }
        if (!(data['dncp'] && data['dncp']['fecha'] && data['dncp']['fecha'].length > 0)) {
            //throw new Error('Debe informar la fecha de emisión de código de Contratación DNCP en data.dncp.fecha');
        }
        this.json['rDE']['DE']['gDtipDE']['gCamFE']['gCompPub'] = {
            dModCont: data['dncp']['modalidad'],
            dEntCont: data['dncp']['entidad'],
            dAnoCont: data['dncp']['año'],
            dSecCont: data['dncp']['secuencia'],
            dFeCodCont: data['dncp']['fecha'],
        };
    }
    generateDatosEspecificosPorTipoDE_Autofactura(params, data) {
        this.json['rDE']['DE']['gDtipDE']['gCamAE'] = {
            iNatVen: data['autoFactura']['tipoVendedor'],
            dDesNatVen: constants_service_1.default.naturalezaVendedorAutofactura.filter((nv) => nv.codigo === data['autoFactura']['tipoVendedor'])[0]['descripcion'],
            iTipIDVen: data['autoFactura']['documentoTipo'],
            dDTipIDVen: constants_service_1.default.tiposDocumentosIdentidades.filter((td) => td.codigo === data['autoFactura']['documentoTipo'])[0]['descripcion'],
            dNumIDVen: data['autoFactura']['documentoNumero'],
            dNomVen: data['autoFactura']['nombre'],
            dDirVen: data['autoFactura']['direccion'],
            dNumCasVen: data['autoFactura']['numeroCasa'],
            cDepVen: +data['autoFactura']['departamento'],
            dDesDepVen: constants_service_1.default.departamentos.filter((td) => td.codigo === +data['autoFactura']['departamento'])[0]['descripcion'],
            cDisVen: +data['autoFactura']['distrito'],
            dDesDisVen: constants_service_1.default.distritos.filter((td) => td.codigo === +data['autoFactura']['distrito'])[0]['descripcion'],
            cCiuVen: +data['autoFactura']['ciudad'],
            dDesCiuVen: constants_service_1.default.ciudades.filter((td) => td.codigo === +data['autoFactura']['ciudad'])[0]['descripcion'],
            dDirProv: data['autoFactura']['ubicacion']['lugar'],
            cDepProv: +data['autoFactura']['ubicacion']['departamento'],
            dDesDepProv: constants_service_1.default.departamentos.filter((td) => td.codigo === +data['autoFactura']['ubicacion']['departamento'])[0]['descripcion'],
            cDisProv: +data['autoFactura']['ubicacion']['distrito'],
            dDesDisProv: constants_service_1.default.distritos.filter((td) => td.codigo === +data['autoFactura']['ubicacion']['distrito'])[0]['descripcion'],
            cCiuProv: +data['autoFactura']['ubicacion']['ciudad'],
            dDesCiuProv: constants_service_1.default.ciudades.filter((td) => td.codigo === +data['autoFactura']['ubicacion']['ciudad'])[0]['descripcion'],
        };
    }
    generateDatosEspecificosPorTipoDE_NotaCreditoDebito(params, data) {
        this.json['rDE']['DE']['gDtipDE']['gCamNCDE'] = {
            iMotEmi: +data['notaCreditoDebito']['motivo'],
            dDesMotEmi: constants_service_1.default.notasCreditosMotivos.filter((nv) => nv.codigo === +data['notaCreditoDebito']['motivo'])[0]['descripcion'],
        };
    }
    generateDatosEspecificosPorTipoDE_RemisionElectronica(params, data) {
        this.json['rDE']['DE']['gDtipDE']['gCamNRE'] = {
            iMotEmiNR: +data['remision']['motivo'],
            dDesMotEmiNR: constants_service_1.default.remisionesMotivos.filter((nv) => nv.codigo === +data['remision']['motivo'])[0]['descripcion'],
            iRespEmiNR: +data['remision']['tipoResponsable'],
            dDesRespEmiNR: constants_service_1.default.remisionesResponsables.filter((nv) => nv.codigo === +data['remision']['tipoResponsable'])[0]['descripcion'],
        };
        if (+data['remision']['motivo'] == 99) {
            this.json['rDE']['DE']['gDtipDE']['gCamNRE']['dDesMotEmiNR'] = data['remision']['motivoDescripcion'];
        }
        //if (data['remision']['kms']) {
        //NT009 pasa a ser obligatorio
        this.json['rDE']['DE']['gDtipDE']['gCamNRE']['dKmR'] = data['remision']['kms'];
        //}
        if (data['remision']['fechaFactura']) {
            this.json['rDE']['DE']['gDtipDE']['gCamNRE']['dFecEm'] = data['remision']['fechaFactura'];
        }
        if (data['remision']['costoFlete']) {
            this.json['rDE']['DE']['gDtipDE']['gCamNRE']['cPreFle'] = data['remision']['costoFlete'];
        }
    }
    /**
     * E7. Campos que describen la condición de la operación (E600-E699)
     * @param params
     * @param data
     * @param options
     */
    generateDatosCondicionOperacionDE(params, data, config) {
        if (!data['condicion']) {
            return;
        }
        if (constants_service_1.default.condicionesOperaciones.filter((um) => um.codigo === data['condicion']['tipo']).length == 0) {
            /*throw new Error(
              "Condición de la Operación '" +
                data['condicion']['tipo'] +
                "' en data.condicion.tipo no encontrado. Valores: " +
                constanteService.condicionesOperaciones.map((a: any) => a.codigo + '-' + a.descripcion),
            );*/
        }
        this.json['rDE']['DE']['gDtipDE']['gCamCond'] = {
            iCondOpe: data['condicion']['tipo'],
            dDCondOpe: constants_service_1.default.condicionesOperaciones.filter((co) => co.codigo === data['condicion']['tipo'])[0]['descripcion'],
        };
        //if (data['condicion']['tipo'] === 1) {
        this.generateDatosCondicionOperacionDE_Contado(params, data, config);
        //}
        if (data['condicion']['tipo'] === 2) {
            this.generateDatosCondicionOperacionDE_Credito(params, data, config);
        }
    }
    /**
     * E7.1. Campos que describen la forma de pago de la operación al contado o del monto
     * de la entrega inicial (E605-E619)
     * @param params
     * @param data
     * @param options
     */
    generateDatosCondicionOperacionDE_Contado(params, data, config) {
        if (data['condicion']['entregas'] && data['condicion']['entregas'].length > 0) {
            const entregas = [];
            for (let i = 0; i < data['condicion']['entregas'].length; i++) {
                const dataEntrega = data['condicion']['entregas'][i];
                const cuotaInicialEntrega = {
                    iTiPago: dataEntrega['tipo'],
                    dDesTiPag: constants_service_1.default.condicionesTiposPagos.filter((co) => co.codigo === dataEntrega['tipo'])[0]['descripcion'],
                };
                cuotaInicialEntrega['dMonTiPag'] = parseFloat(dataEntrega['monto']).toFixed(4);
                /*if (data.moneda === 'PYG') {
                  //Maximo 4 decimales
                  let cantDecimalesMontoTipoPago = config.pygDecimals;
                  if (cantDecimalesMontoTipoPago > 4) {
                    cantDecimalesMontoTipoPago = 4;
                  }
                  cuotaInicialEntrega['dMonTiPag'] = parseFloat(dataEntrega['monto']).toFixed(cantDecimalesMontoTipoPago);
                }*/
                if (dataEntrega['tipo'] == 99) {
                    cuotaInicialEntrega['dDesTiPag'] = dataEntrega['tipoDescripcion'];
                }
                cuotaInicialEntrega['cMoneTiPag'] = dataEntrega['moneda'];
                cuotaInicialEntrega['dDMoneTiPag'] = constants_service_1.default.monedas.filter((m) => m.codigo == dataEntrega['moneda'])[0]['descripcion'];
                if (dataEntrega['moneda'] != 'PYG') {
                    if (dataEntrega['cambio']) {
                        cuotaInicialEntrega['dTiCamTiPag'] = dataEntrega['cambio'];
                    }
                }
                //Verificar si el Pago es con Tarjeta de crédito
                if (dataEntrega['tipo'] === 3 || dataEntrega['tipo'] === 4) {
                    cuotaInicialEntrega['gPagTarCD'] = {
                        iDenTarj: dataEntrega['infoTarjeta']['tipo'],
                        dDesDenTarj: +dataEntrega['infoTarjeta']['tipo'] === 99
                            ? dataEntrega['infoTarjeta']['tipoDescripcion']
                            : constants_service_1.default.tarjetasCreditosTipos.filter((co) => co.codigo === dataEntrega['infoTarjeta']['tipo'])[0]['descripcion'],
                    };
                    if (dataEntrega['infoTarjeta']['razonSocial'] && dataEntrega['infoTarjeta']['ruc']) {
                        //Solo si se envia éste dato
                        cuotaInicialEntrega['gPagTarCD']['dRSProTar'] = dataEntrega['infoTarjeta']['razonSocial'];
                        cuotaInicialEntrega['gPagTarCD']['dRUCProTar'] = dataEntrega['infoTarjeta']['ruc'].split('-')[0];
                        cuotaInicialEntrega['gPagTarCD']['dDVProTar'] = dataEntrega['infoTarjeta']['ruc'].split('-')[1];
                    }
                    cuotaInicialEntrega['gPagTarCD']['iForProPa'] = dataEntrega['infoTarjeta']['medioPago'];
                    if (dataEntrega['infoTarjeta']['codigoAutorizacion']) {
                        if (!((dataEntrega['infoTarjeta']['codigoAutorizacion'] + '').length >= 6 &&
                            (dataEntrega['infoTarjeta']['codigoAutorizacion'] + '').length <= 10)) {
                            /*throw new Error(
                              'El código de Autorización en data.condicion.entregas[' +
                                i +
                                '].infoTarjeta.codigoAutorizacion debe tener de 6 y 10 caracteres',
                            );*/
                        }
                        cuotaInicialEntrega['gPagTarCD']['dCodAuOpe'] = +dataEntrega['infoTarjeta']['codigoAutorizacion'];
                    }
                    if (dataEntrega['infoTarjeta']['titular']) {
                        cuotaInicialEntrega['gPagTarCD']['dNomTit'] = dataEntrega['infoTarjeta']['titular'];
                    }
                    if (dataEntrega['infoTarjeta']['numero']) {
                        cuotaInicialEntrega['gPagTarCD']['dNumTarj'] = dataEntrega['infoTarjeta']['numero'];
                    }
                }
                //Verificar si el Pago es con Cheque
                if (dataEntrega['tipo'] === 2) {
                    if (!dataEntrega['infoCheque']) {
                        /*throw new Error(
                          'Debe informar sobre el cheque en data.condicion.entregas[' +
                            i +
                            '].infoCheque si la forma de Pago es 2-Cheques',
                        );*/
                    }
                    cuotaInicialEntrega['gPagCheq'] = {
                        dNumCheq: StringUtil_service_1.default.leftZero(dataEntrega['infoCheque']['numeroCheque'], 8),
                        dBcoEmi: dataEntrega['infoCheque']['banco'],
                    };
                }
                entregas.push(cuotaInicialEntrega);
            }
            this.json['rDE']['DE']['gDtipDE']['gCamCond']['gPaConEIni'] = entregas; //Array de Entregas
        }
    }
    /**
     * E7.2. Campos que describen la operación a crédito (E640-E649)
     *
     * @param params
     * @param data
     * @param options
     */
    generateDatosCondicionOperacionDE_Credito(params, data, config) {
        if (!data['condicion']['credito']['tipo']) {
            /*throw new Error(
              'El tipo de Crédito en data.condicion.credito.tipo es obligatorio si la condición posee créditos',
            );*/
        }
        if (constants_service_1.default.condicionesCreditosTipos.filter((um) => um.codigo === data['condicion']['credito']['tipo'])
            .length == 0) {
            /*throw new Error(
              "Tipo de Crédito '" +
                data['condicion']['credito']['tipo'] +
                "' en data.condicion.credito.tipo no encontrado. Valores: " +
                constanteService.condicionesCreditosTipos.map((a: any) => a.codigo + '-' + a.descripcion),
            );*/
        }
        this.json['rDE']['DE']['gDtipDE']['gCamCond']['gPagCred'] = {
            iCondCred: data['condicion']['credito']['tipo'],
            dDCondCred: constants_service_1.default.condicionesCreditosTipos.filter((co) => co.codigo === +data['condicion']['credito']['tipo'])[0]['descripcion'],
        };
        if (+data['condicion']['credito']['tipo'] === 1) {
            //Plazo
            this.json['rDE']['DE']['gDtipDE']['gCamCond']['gPagCred']['dPlazoCre'] = data['condicion']['credito']['plazo'];
        }
        if (+data['condicion']['credito']['tipo'] === 2) {
            //Cuota
            if (!data['condicion']['credito']['cuotas']) {
                /*throw new Error(
                  'El tipo de Crédito en data.condicion.credito.tipo es 2 entonces data.condicion.credito.cuotas es obligatorio',
                );*/
            }
            this.json['rDE']['DE']['gDtipDE']['gCamCond']['gPagCred']['dCuotas'] = +data['condicion']['credito']['cuotas'];
        }
        if (data['condicion']['entregas'] && data['condicion']['entregas'].length > 0) {
            let sumaEntregas = 0;
            //Obtiene la sumatoria
            for (let i = 0; i < data['condicion']['entregas'].length; i++) {
                const entrega = data['condicion']['entregas'][i];
                sumaEntregas += entrega['monto']; //Y cuando es de moneda diferente ? como hace?
            }
            this.json['rDE']['DE']['gDtipDE']['gCamCond']['gPagCred']['dMonEnt'] = sumaEntregas;
        }
        //Recorrer array de infoCuotas e informar en el JSON
        if (data['condicion']['credito']['tipo'] === 2) {
            this.json['rDE']['DE']['gDtipDE']['gCamCond']['gPagCred']['gCuotas'] = [];
            //A Cuotas
            if (data['condicion']['credito']['infoCuotas'] && data['condicion']['credito']['infoCuotas'].length > 0) {
                for (let i = 0; i < data['condicion']['credito']['infoCuotas'].length; i++) {
                    const infoCuota = data['condicion']['credito']['infoCuotas'][i];
                    if (constants_service_1.default.monedas.filter((um) => um.codigo === infoCuota['moneda']).length == 0) {
                        /*throw new Error(
                          "Moneda '" +
                            infoCuota['moneda'] +
                            "' en data.condicion.credito.infoCuotas[" +
                            i +
                            '].moneda no encontrado. Valores: ' +
                            constanteService.monedas.map((a: any) => a.codigo + '-' + a.descripcion),
                        );*/
                    }
                    const gCuotas = {
                        cMoneCuo: infoCuota['moneda'],
                        dDMoneCuo: constants_service_1.default.monedas.filter((co) => co.codigo === infoCuota['moneda'])[0]['descripcion'],
                        dMonCuota: infoCuota['monto'],
                    };
                    if (infoCuota['vencimiento']) {
                        gCuotas['dVencCuo'] = infoCuota['vencimiento'];
                    }
                    this.json['rDE']['DE']['gDtipDE']['gCamCond']['gPagCred']['gCuotas'].push(gCuotas);
                }
            }
            else {
                //throw new Error('Debe proporcionar data.condicion.credito.infoCuotas[]');
            }
        }
    }
    normalizeXML(xml) {
        xml = xml.split('\r\n').join('');
        xml = xml.split('\n').join('');
        xml = xml.split('\t').join('');
        xml = xml.split('    ').join('');
        xml = xml.split('>    <').join('><');
        xml = xml.split('>  <').join('><');
        xml = xml.replace(/\r?\n|\r/g, '');
        return xml;
    }
    getPaises() {
        return constants_service_1.default.paises;
    }
    getDepartamentos() {
        return constants_service_1.default.departamentos;
    }
    getDistritos(departamento) {
        if (departamento) {
            return constants_service_1.default.distritos.filter((dis) => dis.departamento === departamento);
        }
        else {
            return constants_service_1.default.distritos;
        }
    }
    getCiudades(distrito) {
        if (distrito) {
            return constants_service_1.default.ciudades.filter((ciu) => ciu.distrito === distrito);
        }
        else {
            return constants_service_1.default.ciudades;
        }
    }
    getTiposRegimenes() {
        return constants_service_1.default.tiposRegimenes;
    }
    getDepartamento(departamentoId) {
        return constants_service_1.default.departamentos.filter((dis) => dis.codigo === departamentoId);
    }
    getDistrito(distritoId) {
        return constants_service_1.default.distritos.filter((dis) => dis.codigo === distritoId);
    }
    getCiudad(ciudadId) {
        return constants_service_1.default.ciudades.filter((ciu) => ciu.codigo === ciudadId);
    }
}
exports.default = new JSonDeMainService();
//# sourceMappingURL=data:application/json;base64,